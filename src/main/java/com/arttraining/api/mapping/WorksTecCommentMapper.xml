<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.arttraining.api.dao.WorksTecCommentMapper" >
  <resultMap id="BaseResultMap" type="com.arttraining.api.pojo.WorksTecComment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="order_code" property="orderCode" jdbcType="VARCHAR" />
    <result column="delete_time" property="deleteTime" jdbcType="TIMESTAMP" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="attachment" property="attachment" jdbcType="VARCHAR" />
    <result column="visitor" property="visitor" jdbcType="INTEGER" />
    <result column="visitor_type" property="visitorType" jdbcType="VARCHAR" />
    <result column="host" property="host" jdbcType="INTEGER" />
    <result column="host_type" property="hostType" jdbcType="VARCHAR" />
    <result column="foreign_key" property="foreignKey" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="content_type" property="contentType" jdbcType="VARCHAR" />
    <result column="listen_num" property="listenNum" jdbcType="INTEGER" />
  </resultMap>
  <!-- coffee add 新增查询条件 -->
  <sql id="select_comment_where">
  	and is_deleted=0
  </sql>
  
  <!-- coffee add 1212 获取首页的名师点评信息 homepage/public_timeline/work接口调用-->
   <resultMap id="CommentListResultMap" type="com.arttraining.api.bean.HomePageTecCommentBean" >
    <result column="tec_id" property="tec_id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="identity" property="identity" jdbcType="VARCHAR" />
    <result column="tec_pic" property="tec_pic" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="comm_time" property="comm_time" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="comm_type" property="comm_type" jdbcType="VARCHAR" />
    <result column="thumbnail" property="thumbnail" jdbcType="VARCHAR" />
    <result column="duration" property="duration" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="listen_num" property="listen_num" jdbcType="INTEGER" />
    <result column="comm_id" property="comm_id" jdbcType="INTEGER" />
  </resultMap>
  <select id="selectTecCommentByWorkId" resultMap="CommentListResultMap" parameterType="java.lang.Integer" >
    select u.id as tec_id,u.name,u.title,
    case   
        when u.role=0 then 'ms'  
        when u.role=1 then 'zj' 
        when u.role=2 then 'iartschool' 
        else 'dr' 
    end identity,u.city_name as city,u.school_name as school,
    u.head_pic as tec_pic,c.create_time as comm_time,c.content,
    c.content_type as type,c.type as comm_type,c.id as comm_id,
    c.attachment as thumbnail,c.remarks as duration,c.listen_num
    from (select distinct visitor,create_time,type,
    content_type,listen_num,content,attachment,remarks,id
	from t_yp_works_tec_comment
	where type='comment' and foreign_key=#{work_id,jdbcType=INTEGER}
	and visitor_type='tec'
	<include refid="select_comment_where"></include>
	limit 0,1) c,
	(select id,name,city_name,school_name,
	role,head_pic,title
	from t_yp_user_tech
	where is_lock=0 and is_deleted=0) u
	where c.visitor=u.id
  </select>
  <!-- coffee add 1124 判断名师是否重复点评 -->
  <select id="selectTecCommentByMaster" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_yp_works_tec_comment
    where is_deleted=0 and foreign_key=#{work_id,jdbcType=INTEGER}
    and visitor = #{uid,jdbcType=INTEGER}
    and visitor_type='tec' and type='comment'
    limit 0,1
  </select>
  <!-- coffee add 1124 名师端接口 获取发布作品用户ID的信息 assessments/master/show接口调用-->
  <resultMap id="MasterShowResultMap" type="com.arttraining.api.bean.MasterCommentReBean" >
    <result column="stus_id" property="stus_id" jdbcType="INTEGER" />
    <result column="stus_type" property="type" jdbcType="VARCHAR" />   
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
    <result column="owner" property="owner" jdbcType="INTEGER" />
    <result column="owner_type" property="owner_type" jdbcType="VARCHAR" />
    <result column="owner_name" property="owner_name" jdbcType="VARCHAR" />
    <result column="owner_head_pic" property="owner_head_pic" jdbcType="VARCHAR" />
   	<result column="identity" property="identity" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
  	<result column="title" property="title" jdbcType="VARCHAR" />
    <result column="tag" property="tag" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="comment_num" property="comment_num" jdbcType="INTEGER" />
    <result column="like_num" property="like_num" jdbcType="INTEGER" />
    <result column="browse_num" property="browse_num" jdbcType="INTEGER" />
    <result column="tec_comment_num" property="tec_comment_num" jdbcType="INTEGER" />
  </resultMap>
  <select id="selectWorkByMasterShow" resultMap="MasterShowResultMap" parameterType="java.lang.Integer">
    select w.id as stus_id,'work' as stus_type,w.comment_num,
    w.owner_type,w.like_num,w.browse_num,w.content,
	w.title,w.tag,w.create_time,w.tec_comment_num,
	s.identity_name as identity,
	s.id as owner,s.name as owner_name,s.city_name as city,
	s.head_pic as owner_head_pic
	from (select id,comment_num,like_num,browse_num,content,title,
		  tag,create_time,owner,owner_type,tec_comment_num
		  from t_yp_works
	      where is_deleted=0 and id=#{id,jdbcType=INTEGER}) w, 
		(select identity_name,city_name,head_pic,name,id
		from t_yp_user_stu
		where is_deleted=0 and is_lock=0) s
	where w.owner = s.id
  </select>
  
  <!-- coffee add 依据名师ID和作品ID来获取点评列表信息 assessments/master/show接口调用-->
   <resultMap id="MasterCommentResultMap" type="com.arttraining.api.bean.MasterCommentListBean" >
    <result column="comm_id" property="comm_id" jdbcType="INTEGER" />
    <result column="visitor_id" property="visitor_id" jdbcType="INTEGER" />   
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="content_type" property="content_type" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="duration" property="duration" jdbcType="VARCHAR" />
   	<result column="attr" property="attr" jdbcType="VARCHAR" />
    <result column="comm_type" property="comm_type" jdbcType="VARCHAR" />
  	<result column="comm_time" property="comm_time" jdbcType="TIMESTAMP" />
  </resultMap>
   <select id="selectCommentListByMasterShow" resultMap="MasterCommentResultMap" parameterType="java.util.Map" >
    select id as comm_id,visitor as visitor_id,visitor_type as type,
    content_type,content,remarks as duration,attachment as attr,
    type as comm_type,create_time as comm_time
    from t_yp_works_tec_comment
    where is_deleted=0 and 
    ((visitor = #{uid,jdbcType=INTEGER} and visitor_type='tec')
    or  (host = #{uid,jdbcType=INTEGER} and host_type='tec'))
    and foreign_key= #{work_id,jdbcType=INTEGER}
    <if test="offset !=-1">
    	and create_time &gt;(select create_time
    	from t_yp_works_tec_comment 
    	where is_deleted=0 and id=#{offset,jdbcType=INTEGER})
    	and id <![CDATA[ <> ]]> #{offset,jdbcType=INTEGER}
    </if>
    order by create_time
    limit #{limit,jdbcType=INTEGER}
  </select>
  
  <!-- coffee add 1125 依据用户类型和ID查询名称和头像 -->
   <resultMap id="CommentUserResultMap" type="com.arttraining.api.bean.MasterCommentUserBean" >
    <result column="name" property="name" jdbcType="VARCHAR" />
  	<result column="pic" property="pic" jdbcType="VARCHAR" />
  </resultMap>
  <select id="selectCommentUserByMasterShow" resultMap="CommentUserResultMap" parameterType="java.util.Map" >
  <choose>
  	<when test="user_type=='stu'">
  		select name,head_pic as pic
  		from t_yp_user_stu
  		where is_deleted=0 and is_lock=0
  		and id=#{user_id,jdbcType=INTEGER}
  	</when>
  	<when test="user_type=='tec'">
  		select name,head_pic as pic
  		from t_yp_user_tech
  		where is_deleted=0 and is_lock=0
  		and id=#{user_id,jdbcType=INTEGER}
  	</when>
  </choose>
  </select>
  <!-- end -->
  
  
  <!-- coffee add 1113 查询名师点评作品的信息 statuses/show/work接口调用-->
   <resultMap id="WorkUserResultMap" type="com.arttraining.api.bean.WorkCommentTecInfoBean" >
    <result column="id" property="tec_id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="city_name" property="city" jdbcType="VARCHAR" />
    <result column="school_name" property="school" jdbcType="VARCHAR" />
    <result column="identity_name" property="identity" jdbcType="VARCHAR" />
    <result column="head_pic" property="tec_pic" jdbcType="VARCHAR" />
  </resultMap>
  <select id="selectUserInfoByWorkShow" resultMap="WorkUserResultMap" parameterType="java.lang.Integer" >
    select u.id,u.name,u.city_name,u.school_name,
	u.identity_name,u.head_pic
    from (select distinct visitor
	from t_yp_works_tec_comment
	where type='comment' and foreign_key=#{fid,jdbcType=INTEGER}
	and visitor_type='tec'
	<include refid="select_comment_where"></include>) c,
	(select id,name,city_name,school_name,
	identity_name,head_pic
	from t_yp_user_tech
	where is_lock=0 and is_deleted=0) u
	where c.visitor=u.id
  </select>
  
  <!-- coffee add 依据名师ID 查询评论信息 默认显示第一条(按照评论时间升序排序) -->
  <resultMap id="TecCommentResultMap" type="com.arttraining.api.bean.WorkTecCommentBean" >
    <id column="comm_id" property="comm_id" jdbcType="INTEGER" />
    <result column="content_type" property="type" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="type" property="comm_type" jdbcType="VARCHAR" />
    <result column="duration" property="duration" jdbcType="VARCHAR" />
    <result column="comm_time" property="comm_time" jdbcType="VARCHAR" />
    <result column="attr" property="attr" jdbcType="VARCHAR" />
    <result column="listen_num" property="listen_num" jdbcType="INTEGER" />
  </resultMap>
  <select id="selectTecCommentByWorkShow" resultMap="TecCommentResultMap">
 	select id as comm_id,content_type,content,type,remarks as duration,
 	attachment as attr,create_time as comm_time,listen_num
	from t_yp_works_tec_comment
	where foreign_key=#{fid,jdbcType=INTEGER}
	and ((visitor_type='tec' and visitor=#{uid,jdbcType=INTEGER})
	or (host_type='tec' and host=#{uid,jdbcType=INTEGER})) 
	order by create_time
	<if test="limit != null">
		limit #{limit,jdbcType=INTEGER}
	</if>
  </select>
  <!-- end -->
  
  
  <sql id="Base_Column_List" >
    id, uuid, is_deleted, create_time, order_code, delete_time, remarks, attachment, 
    visitor, visitor_type, host, host_type, foreign_key, content, score, type, content_type,listen_num
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_yp_works_tec_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_yp_works_tec_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.arttraining.api.pojo.WorksTecComment" >
    insert into t_yp_works_tec_comment (id, uuid, is_deleted, 
      create_time, order_code, delete_time, 
      remarks, attachment, visitor, 
      visitor_type, host, host_type, 
      foreign_key, content, score, 
      type, content_type,listen_num)
    values (#{id,jdbcType=INTEGER}, #{uuid,jdbcType=VARCHAR}, #{isDeleted,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{orderCode,jdbcType=VARCHAR}, #{deleteTime,jdbcType=TIMESTAMP}, 
      #{remarks,jdbcType=VARCHAR}, #{attachment,jdbcType=VARCHAR}, #{visitor,jdbcType=INTEGER}, 
      #{visitorType,jdbcType=VARCHAR}, #{host,jdbcType=INTEGER}, #{hostType,jdbcType=VARCHAR}, 
      #{foreignKey,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{score,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{contentType,jdbcType=VARCHAR},#{listenNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.arttraining.api.pojo.WorksTecComment" >
    insert into t_yp_works_tec_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="orderCode != null" >
        order_code,
      </if>
      <if test="deleteTime != null" >
        delete_time,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="attachment != null" >
        attachment,
      </if>
      <if test="visitor != null" >
        visitor,
      </if>
      <if test="visitorType != null" >
        visitor_type,
      </if>
      <if test="host != null" >
        host,
      </if>
      <if test="hostType != null" >
        host_type,
      </if>
      <if test="foreignKey != null" >
        foreign_key,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="contentType != null" >
        content_type,
      </if>
      <if test="listenNum != null" >
        listen_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderCode != null" >
        #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="deleteTime != null" >
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="attachment != null" >
        #{attachment,jdbcType=VARCHAR},
      </if>
      <if test="visitor != null" >
        #{visitor,jdbcType=INTEGER},
      </if>
      <if test="visitorType != null" >
        #{visitorType,jdbcType=VARCHAR},
      </if>
      <if test="host != null" >
        #{host,jdbcType=INTEGER},
      </if>
      <if test="hostType != null" >
        #{hostType,jdbcType=VARCHAR},
      </if>
      <if test="foreignKey != null" >
        #{foreignKey,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null" >
        #{contentType,jdbcType=VARCHAR},
      </if>
      <if test="listenNum != null" >
         #{listenNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.arttraining.api.pojo.WorksTecComment" >
    update t_yp_works_tec_comment
    <set >
      <if test="uuid != null" >
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderCode != null" >
        order_code = #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="deleteTime != null" >
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="attachment != null" >
        attachment = #{attachment,jdbcType=VARCHAR},
      </if>
      <if test="visitor != null" >
        visitor = #{visitor,jdbcType=INTEGER},
      </if>
      <if test="visitorType != null" >
        visitor_type = #{visitorType,jdbcType=VARCHAR},
      </if>
      <if test="host != null" >
        host = #{host,jdbcType=INTEGER},
      </if>
      <if test="hostType != null" >
        host_type = #{hostType,jdbcType=VARCHAR},
      </if>
      <if test="foreignKey != null" >
        foreign_key = #{foreignKey,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null" >
        content_type = #{contentType,jdbcType=VARCHAR},
      </if>
       <if test="listenNum != null" >
        listen_num=listen_num+#{listenNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.arttraining.api.pojo.WorksTecComment" >
    update t_yp_works_tec_comment
    set uuid = #{uuid,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      order_code = #{orderCode,jdbcType=VARCHAR},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      attachment = #{attachment,jdbcType=VARCHAR},
      visitor = #{visitor,jdbcType=INTEGER},
      visitor_type = #{visitorType,jdbcType=VARCHAR},
      host = #{host,jdbcType=INTEGER},
      host_type = #{hostType,jdbcType=VARCHAR},
      foreign_key = #{foreignKey,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      score = #{score,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      content_type = #{contentType,jdbcType=VARCHAR},
      listen_num=#{listenNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>